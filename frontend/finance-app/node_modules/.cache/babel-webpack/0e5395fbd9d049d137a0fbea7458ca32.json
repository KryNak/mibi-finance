{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kryst/Desktop/frontend/finance-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TickerService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n\n  getTickerDetails(ticker) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const accessToken = (_a = localStorage.getItem('accessToken')) !== null && _a !== void 0 ? _a : '';\n      const header = new HttpHeaders();\n      header.append('Authorization', `Bearer ${accessToken}`);\n      const url = `http://localhost:8080/api/tickers/${ticker}/details`;\n      const response = yield _this.httpClient.get(url, {\n        headers: header\n      }).toPromise().then(response => response).catch(errors => {\n        errors.errors.headers.get('isExpired');\n      });\n    })();\n  }\n\n}\n\nTickerService.ɵfac = function TickerService_Factory(t) {\n  return new (t || TickerService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nTickerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TickerService,\n  factory: TickerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\kryst\\Desktop\\frontend\\finance-app\\src\\app\\services\\ticker.service.ts"],"names":[],"mappings":";AAEA,SAAoB,WAApB,QAAsC,sBAAtC;;;AAKA,OAAM,MAAO,aAAP,CAAoB;AAExB,EAAA,WAAA,CAAoB,UAApB,EAA0C;AAAtB,SAAA,UAAA,GAAA,UAAA;AAA2B;;AAEzC,EAAA,gBAAgB,CAAC,MAAD,EAAe;AAAA;;AAAA;;;AAEnC,YAAM,WAAW,GAAW,CAAA,EAAA,GAAA,YAAY,CAAC,OAAb,CAAqB,aAArB,CAAA,MAAmC,IAAnC,IAAmC,EAAA,KAAA,KAAA,CAAnC,GAAmC,EAAnC,GAAuC,EAAnE;AAEA,YAAM,MAAM,GAAgB,IAAI,WAAJ,EAA5B;AACA,MAAA,MAAM,CAAC,MAAP,CAAc,eAAd,EAA+B,UAAU,WAAW,EAApD;AAEA,YAAM,GAAG,GAAW,qCAAqC,MAAM,UAA/D;AACA,YAAM,QAAQ,SAAkC,KAAI,CAAC,UAAL,CAC7C,GAD6C,CAChB,GADgB,EACX;AAAC,QAAA,OAAO,EAAE;AAAV,OADW,EAE7C,SAF6C,GAG7C,IAH6C,CAGxC,QAAQ,IAAI,QAH4B,EAI7C,KAJ6C,CAIvC,MAAM,IAAG;AACd,QAAA,MAAM,CAAC,MAAP,CAAc,OAAd,CAAsB,GAAtB,CAA0B,WAA1B;AACD,OAN6C,CAAhD;AARmC;AAgBpC;;AApBuB;;;mBAAb,a,EAAa,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAb,a;AAAa,EAAA,OAAA,EAAb,aAAa,CAAA,I;AAAA,EAAA,UAAA,EAFZ","sourcesContent":["import { Injectable } from '@angular/core';\nimport {TickerDetailResponseDto} from \"../dtos/responses/ticker-detail-response-dto\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TickerService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  async getTickerDetails(ticker: string): Promise<TickerDetailResponseDto>{\n\n    const accessToken: string = localStorage.getItem('accessToken') ?? '';\n\n    const header: HttpHeaders = new HttpHeaders();\n    header.append('Authorization', `Bearer ${accessToken}`)\n\n    const url: string = `http://localhost:8080/api/tickers/${ticker}/details`;\n    const response: TickerDetailResponseDto = await this.httpClient\n      .get<TickerDetailResponseDto>(url, {headers: header})\n      .toPromise()\n      .then(response => response)\n      .catch(errors => {\n        errors.errors.headers.get('isExpired')\n      });\n\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}