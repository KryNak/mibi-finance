{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kryst/Desktop/frontend/finance-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../../services/accounts.service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\n\nfunction RegisterComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      let tmp_b_0;\n      return (tmp_b_0 = ctx_r2.registerForm.get(\"username\")) == null ? null : tmp_b_0.setValue(\"\");\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_button_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_button_28_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      let tmp_b_0;\n      return (tmp_b_0 = ctx_r4.registerForm.get(\"email\")) == null ? null : tmp_b_0.setValue(\"\");\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class RegisterComponent {\n  constructor(router, formBuilder, httpClient, accountsService) {\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.httpClient = httpClient;\n    this.accountsService = accountsService;\n    this.passwordHide = true;\n    this.registerForm = this.formBuilder.group({\n      username: [''],\n      password: [''],\n      passwordRepetition: [''],\n      email: ['']\n    });\n  }\n\n  ngOnInit() {}\n\n  loginRoute() {\n    this.router.navigate(['/', 'login']);\n  }\n\n  register() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      const username = (_b = (_a = _this.registerForm.get('username')) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : '';\n      const password = (_d = (_c = _this.registerForm.get('password')) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : '';\n      const passwordRepetition = (_f = (_e = _this.registerForm.get('passwordRepetition')) === null || _e === void 0 ? void 0 : _e.value) !== null && _f !== void 0 ? _f : '';\n      const email = (_h = (_g = _this.registerForm.get('email')) === null || _g === void 0 ? void 0 : _g.value) !== null && _h !== void 0 ? _h : '';\n      const isRegistered = yield _this.registerService.register(username, password, passwordRepetition, email);\n\n      if (isRegistered) {\n        alert('You have been successfully registered');\n\n        _this.router.navigate(['/', 'login']);\n\n        return;\n      }\n\n      alert('Bad credentials');\n    })();\n  }\n\n}\n\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.AccountsService));\n};\n\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 34,\n  vars: 9,\n  consts: [[1, \"content\"], [1, \"card\"], [1, \"card\", 3, \"formGroup\", \"ngSubmit\"], [1, \"card-header\"], [1, \"input-field\"], [\"matInput\", \"\", \"formControlName\", \"username\", 3, \"type\"], [\"mat-button\", \"\", \"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\", 4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", 3, \"type\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"passwordRepetition\", 3, \"type\"], [\"matInput\", \"\", \"formControlName\", \"email\", 3, \"type\"], [1, \"action-buttons\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\"], [\"mat-button\", \"\", \"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-card\", 1);\n      i0.ɵɵelementStart(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-form-field\", 4);\n      i0.ɵɵelementStart(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵtemplate(9, RegisterComponent_button_9_Template, 3, 0, \"button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 4);\n      i0.ɵɵelementStart(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 7);\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_14_listener() {\n        return ctx.passwordHide = !ctx.passwordHide;\n      });\n      i0.ɵɵelementStart(15, \"mat-icon\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"mat-form-field\", 4);\n      i0.ɵɵelementStart(18, \"mat-label\");\n      i0.ɵɵtext(19, \"Repeat password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 9);\n      i0.ɵɵelementStart(21, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_21_listener() {\n        return ctx.passwordHide = !ctx.passwordHide;\n      });\n      i0.ɵɵelementStart(22, \"mat-icon\");\n      i0.ɵɵtext(23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"mat-form-field\", 4);\n      i0.ɵɵelementStart(25, \"mat-label\");\n      i0.ɵɵtext(26, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 10);\n      i0.ɵɵtemplate(28, RegisterComponent_button_28_Template, 3, 0, \"button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 11);\n      i0.ɵɵelementStart(30, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_30_listener() {\n        return ctx.loginRoute();\n      });\n      i0.ɵɵtext(31, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 13);\n      i0.ɵɵtext(33, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_8_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"type\", \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_2_0.value);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.passwordHide ? \"password\" : \"text\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.passwordHide ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.passwordHide ? \"password\" : \"text\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.passwordHide ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_8_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_8_0.value);\n    }\n  },\n  directives: [i5.MatCard, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i6.MatFormField, i6.MatLabel, i7.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i8.NgIf, i9.MatButton, i6.MatSuffix, i10.MatIcon],\n  styles: [\".content[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  width: 500px;\\r\\n  height: 400px;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  grid-gap: 20px;\\r\\n  gap: 20px;\\r\\n}\\r\\n\\r\\n.card-header[_ngcontent-%COMP%]{\\r\\n  text-transform: capitalize;\\r\\n  letter-spacing: 1px;\\r\\n  font-size: 26px;\\r\\n}\\r\\n\\r\\n.input-field[_ngcontent-%COMP%], .action-buttons[_ngcontent-%COMP%]{\\r\\n  width: 250px;\\r\\n}\\r\\n\\r\\n.action-buttons[_ngcontent-%COMP%]{\\r\\n  width: 80%;\\r\\n  display: flex;\\r\\n  justify-content: space-around;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGNBQVM7RUFBVCxTQUFTO0FBQ1g7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnR7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uY2FyZHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIGhlaWdodDogNDAwcHg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBnYXA6IDIwcHg7XHJcbn1cclxuXHJcbi5jYXJkLWhlYWRlcntcclxuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gIGZvbnQtc2l6ZTogMjZweDtcclxufVxyXG5cclxuLmlucHV0LWZpZWxkLCAuYWN0aW9uLWJ1dHRvbnN7XHJcbiAgd2lkdGg6IDI1MHB4O1xyXG59XHJcblxyXG4uYWN0aW9uLWJ1dHRvbnN7XHJcbiAgd2lkdGg6IDgwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcbiJdfQ== */\", \".card[_ngcontent-%COMP%]{\\r\\n  height: 500px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0FBQ2YiLCJmaWxlIjoicmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xyXG4gIGhlaWdodDogNTAwcHg7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\kryst\\Desktop\\frontend\\finance-app\\src\\app\\components\\register\\register.component.ts","C:\\Users\\kryst\\Desktop\\frontend\\finance-app\\src\\app\\components\\register\\register.component.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormGroup, FormBuilder} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {AccountsService} from \"../../services/accounts.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../login/login.component.css', './register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  passwordHide = true;\n\n  registerForm: FormGroup = this.formBuilder.group({\n    username: [''],\n    password: [''],\n    passwordRepetition: [''],\n    email: ['']\n  });\n\n  constructor(private router: Router, private formBuilder: FormBuilder, private httpClient: HttpClient,\n              private accountsService: AccountsService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  loginRoute(): void {\n    this.router.navigate(['/', 'login']);\n  }\n\n  async register(): Promise<void> {\n    const username: string = this.registerForm.get('username')?.value ?? '';\n    const password: string = this.registerForm.get('password')?.value ?? '';\n    const passwordRepetition: string = this.registerForm.get('passwordRepetition')?.value ?? '';\n    const email: string = this.registerForm.get('email')?.value ?? '';\n\n    const isRegistered: boolean = await this.registerService.register(username, password, passwordRepetition, email);\n\n    if (isRegistered) {\n      alert('You have been successfully registered');\n      this.router.navigate(['/', 'login']);\n      return;\n    }\n\n    alert('Bad credentials');\n  }\n\n}\n","<div class=\"content\">\n  <mat-card class=\"card\">\n\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" class=\"card\">\n\n      <div class=\"card-header\">\n        Register\n      </div>\n\n      <mat-form-field class=\"input-field\">\n        <mat-label>Login</mat-label>\n        <input matInput [type]=\"'text'\" formControlName=\"username\">\n        <button mat-button *ngIf=\"registerForm.get('username')?.value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"registerForm.get('username')?.setValue('')\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n\n      <mat-form-field class=\"input-field\">\n        <mat-label>Password</mat-label>\n        <input matInput [type]=\"passwordHide ? 'password' : 'text'\" formControlName=\"password\">\n        <button type=\"button\" mat-icon-button matSuffix (click)=\"passwordHide = !passwordHide\">\n          <mat-icon>{{passwordHide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n      </mat-form-field>\n\n      <mat-form-field class=\"input-field\">\n        <mat-label>Repeat password</mat-label>\n        <input matInput [type]=\"passwordHide ? 'password' : 'text'\" formControlName=\"passwordRepetition\">\n        <button type=\"button\" mat-icon-button matSuffix (click)=\"passwordHide = !passwordHide\">\n          <mat-icon>{{passwordHide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n      </mat-form-field>\n\n      <mat-form-field class=\"input-field\">\n        <mat-label>Email</mat-label>\n        <input matInput [type]=\"'text'\" formControlName=\"email\">\n        <button mat-button *ngIf=\"registerForm.get('email')?.value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"registerForm.get('email')?.setValue('')\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n\n      <div class=\"action-buttons\">\n        <button mat-raised-button color=\"primary\" (click)=\"loginRoute()\">Back</button>\n        <button type=\"submit\" mat-raised-button color=\"primary\">Register</button>\n      </div>\n\n    </form>\n\n  </mat-card>\n\n</div>\n\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}