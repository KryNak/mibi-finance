{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kryst/Desktop/frontend/finance-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { RegisterRequestDto } from '../dtos/requests/register-request-dto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RegisterService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  register(username, password, passwordRepetition, email) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const request = new RegisterRequestDto(username, password, passwordRepetition, email);\n\n      const response = _this.http.post('http://www.localhost:8080/api/accounts/register', request).toPromise();\n\n      return yield response.then(ignore => {\n        return true;\n      }).catch(ignore => {\n        return false;\n      });\n    })();\n  }\n\n}\n\nRegisterService.ɵfac = function RegisterService_Factory(t) {\n  return new (t || RegisterService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nRegisterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegisterService,\n  factory: RegisterService.ɵfac\n});","map":{"version":3,"sources":["C:\\Users\\kryst\\Desktop\\frontend\\finance-app\\src\\app\\services\\register.service.ts"],"names":[],"mappings":";AAGA,SAAQ,kBAAR,QAAiC,uCAAjC;;;AAGA,OAAM,MAAO,eAAP,CAAsB;AAE1B,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AACnB;;AAEK,EAAA,QAAQ,CAAC,QAAD,EAAmB,QAAnB,EAAqC,kBAArC,EAAiE,KAAjE,EAA8E;AAAA;;AAAA;AAC1F,YAAM,OAAO,GAAuB,IAAI,kBAAJ,CAAuB,QAAvB,EAAiC,QAAjC,EAA2C,kBAA3C,EAA+D,KAA/D,CAApC;;AACA,YAAM,QAAQ,GAAiC,KAAI,CAAC,IAAL,CAC5C,IAD4C,CAClB,iDADkB,EACiC,OADjC,EAE5C,SAF4C,EAA/C;;AAIA,mBAAa,QAAQ,CAClB,IADU,CACL,MAAM,IAAG;AACb,eAAO,IAAP;AACD,OAHU,EAIV,KAJU,CAIJ,MAAM,IAAG;AACd,eAAO,KAAP;AACD,OANU,CAAb;AAN0F;AAa3F;;AAlByB;;;mBAAf,e,EAAe,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAf,e;AAAe,EAAA,OAAA,EAAf,eAAe,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {RegisterResponseDto} from '../dtos/responses/register-response-dto';\nimport {RegisterRequestDto} from '../dtos/requests/register-request-dto';\n\n@Injectable()\nexport class RegisterService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  async register(username: string, password: string, passwordRepetition: string, email: string): Promise<boolean> {\n    const request: RegisterRequestDto = new RegisterRequestDto(username, password, passwordRepetition, email);\n    const response: Promise<RegisterResponseDto> = this.http\n      .post<RegisterResponseDto>('http://www.localhost:8080/api/accounts/register', request)\n      .toPromise();\n\n    return await response\n      .then(ignore => {\n        return true;\n      })\n      .catch(ignore => {\n        return false;\n      });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}