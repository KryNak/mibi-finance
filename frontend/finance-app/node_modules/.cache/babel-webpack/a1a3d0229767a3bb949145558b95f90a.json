{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kryst/Desktop/frontend/finance-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../../services/accounts.service\";\nimport * as i5 from \"../../services/auth.service\";\n\nfunction LoginComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      let tmp_b_0;\n      return (tmp_b_0 = ctx_r1.loginForm.get(\"username\")) == null ? null : tmp_b_0.setValue(\"\");\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class LoginComponent {\n  constructor(router, formBuilder, httpClient, accountsService, authService) {\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.httpClient = httpClient;\n    this.accountsService = accountsService;\n    this.authService = authService;\n    this.hide = true;\n    this.loginForm = this.formBuilder.group({\n      username: [''],\n      password: ['']\n    });\n  }\n\n  ngOnInit() {}\n\n  registerRoute() {\n    this.router.navigate(['/', 'register']);\n  }\n\n  login() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const username = (_a = _this.loginForm.get('username')) === null || _a === void 0 ? void 0 : _a.value;\n      const password = (_b = _this.loginForm.get('password')) === null || _b === void 0 ? void 0 : _b.value;\n      const isLogin = yield _this.accountsService.login(username, password);\n\n      if (isLogin) {\n        alert('You have been successfully sign in');\n\n        _this.authService.update();\n\n        _this.router.navigate(['/', 'dashboard']);\n\n        return;\n      }\n\n      alert('Bad credentials');\n    })();\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.AccountsService), i0.ɵɵdirectiveInject(i5.AuthService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 5,\n  consts: [[1, \"content\"], [1, \"card\"], [1, \"card\", 3, \"formGroup\", \"ngSubmit\"], [1, \"card-header\"], [1, \"input-field\"], [\"matInput\", \"\", \"formControlName\", \"username\", 3, \"type\"], [\"mat-button\", \"\", \"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\", 4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", 3, \"type\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [1, \"action-buttons\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\"], [\"mat-button\", \"\", \"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-card\", 1);\n      i0.ɵɵelementStart(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-form-field\", 4);\n      i0.ɵɵelementStart(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵtemplate(9, LoginComponent_button_9_Template, 3, 0, \"button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 4);\n      i0.ɵɵelementStart(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 7);\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelementStart(15, \"mat-icon\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 9);\n      i0.ɵɵelementStart(18, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_18_listener() {\n        return ctx.registerRoute();\n      });\n      i0.ɵɵtext(19, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 11);\n      i0.ɵɵtext(21, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_2_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"type\", \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_2_0.value);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n    }\n  },\n  styles: [\".content[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  width: 500px;\\r\\n  height: 400px;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  grid-gap: 20px;\\r\\n  gap: 20px;\\r\\n}\\r\\n\\r\\n.card-header[_ngcontent-%COMP%]{\\r\\n  text-transform: capitalize;\\r\\n  letter-spacing: 1px;\\r\\n  font-size: 26px;\\r\\n}\\r\\n\\r\\n.input-field[_ngcontent-%COMP%], .action-buttons[_ngcontent-%COMP%]{\\r\\n  width: 250px;\\r\\n}\\r\\n\\r\\n.action-buttons[_ngcontent-%COMP%]{\\r\\n  width: 80%;\\r\\n  display: flex;\\r\\n  justify-content: space-around;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGNBQVM7RUFBVCxTQUFTO0FBQ1g7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnR7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uY2FyZHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIGhlaWdodDogNDAwcHg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBnYXA6IDIwcHg7XHJcbn1cclxuXHJcbi5jYXJkLWhlYWRlcntcclxuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gIGZvbnQtc2l6ZTogMjZweDtcclxufVxyXG5cclxuLmlucHV0LWZpZWxkLCAuYWN0aW9uLWJ1dHRvbnN7XHJcbiAgd2lkdGg6IDI1MHB4O1xyXG59XHJcblxyXG4uYWN0aW9uLWJ1dHRvbnN7XHJcbiAgd2lkdGg6IDgwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"sources":["C:\\Users\\kryst\\Desktop\\frontend\\finance-app\\src\\app\\pages\\login\\login.component.ts","C:\\Users\\kryst\\Desktop\\frontend\\finance-app\\src\\app\\pages\\login\\login.component.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {AccountsService} from '../../services/accounts.service';\nimport {AuthService} from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  hide = true;\n\n  loginForm: FormGroup = this.formBuilder.group({\n    username: [''],\n    password: ['']\n  });\n\n  constructor(private router: Router, private formBuilder: FormBuilder, private httpClient: HttpClient,\n              private accountsService: AccountsService, private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  registerRoute(): void {\n    this.router.navigate(['/', 'register']);\n  }\n\n  async login(): Promise<void> {\n    const username: string = this.loginForm.get('username')?.value;\n    const password: string = this.loginForm.get('password')?.value;\n\n    const isLogin: boolean = await this.accountsService.login(username, password);\n    if (isLogin) {\n      alert('You have been successfully sign in');\n      this.authService.update();\n      this.router.navigate(['/', 'dashboard']);\n      return;\n    }\n\n    alert('Bad credentials');\n  }\n\n}\n","<div class=\"content\">\n  <mat-card class=\"card\">\n\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"card\">\n      <div class=\"card-header\">\n        Login\n      </div>\n\n      <mat-form-field class=\"input-field\">\n        <mat-label>Login</mat-label>\n        <input matInput [type]=\"'text'\" formControlName=\"username\">\n        <button mat-button *ngIf=\"loginForm.get('username')?.value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"loginForm.get('username')?.setValue('')\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n\n      <mat-form-field class=\"input-field\">\n        <mat-label>Password</mat-label>\n        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\n        <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n      </mat-form-field>\n\n      <div class=\"action-buttons\">\n        <button mat-raised-button color=\"primary\" (click)=\"registerRoute()\">Register</button>\n        <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\n      </div>\n    </form>\n\n  </mat-card>\n</div>\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}