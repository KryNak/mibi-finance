{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kryst/Desktop/frontend/finance-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n\n  canActivate() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.auth.getAuthenticationSubject().pipe(map(val => {\n        if (!val) {\n          _this.router.navigate(['/', 'login']);\n\n          return false;\n        }\n\n        return true;\n      })).toPromise();\n    })();\n  }\n\n}\n\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\kryst\\Desktop\\frontend\\finance-app\\src\\app\\services\\auth-guard.service.ts"],"names":[],"mappings":";AAGA,SAAQ,GAAR,QAAkB,gBAAlB;;;;AAIA,OAAM,MAAO,gBAAP,CAAuB;AAE3B,EAAA,WAAA,CAAmB,IAAnB,EAA6C,MAA7C,EAA2D;AAAxC,SAAA,IAAA,GAAA,IAAA;AAA0B,SAAA,MAAA,GAAA,MAAA;AAC5C;;AAEK,EAAA,WAAW,GAAA;AAAA;;AAAA;AACf,mBAAa,KAAI,CAAC,IAAL,CACV,wBADU,GAEV,IAFU,CAEL,GAAG,CAAE,GAAD,IAAQ;AAChB,YAAG,CAAC,GAAJ,EAAQ;AACN,UAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,GAAD,EAAM,OAAN,CAArB;;AACA,iBAAO,KAAP;AACD;;AAED,eAAO,IAAP;AACD,OAPQ,CAFE,EAUV,SAVU,EAAb;AADe;AAYhB;;AAjB0B;;;mBAAhB,gB,EAAgB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,WAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,C;AAAA,C;;;SAAhB,gB;AAAgB,EAAA,OAAA,EAAhB,gBAAgB,CAAA,I;AAAA,EAAA,UAAA,EADJ","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Router, CanActivate} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) {\n  }\n\n  async canActivate(): Promise<boolean> {\n    return await this.auth\n      .getAuthenticationSubject()\n      .pipe(map((val) => {\n        if(!val){\n          this.router.navigate(['/', 'login']);\n          return false;\n        }\n\n        return true;\n      }))\n      .toPromise()\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}